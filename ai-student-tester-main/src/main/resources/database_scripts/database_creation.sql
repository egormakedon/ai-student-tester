-- Create database AISTUDENTTESTER
CREATE DATABASE IF NOT EXISTS AISTUDENTTESTER DEFAULT CHARACTER SET utf8;

-- Select database AISTUDENTTESTER
USE AISTUDENTTESTER;

-- Create table AISTUDENTTESTER.QUESTION
CREATE TABLE IF NOT EXISTS AISTUDENTTESTER.QUESTION (
    QUESTIONID      INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Question id, PK',
    QUESTIONNAME    VARCHAR(1000) NOT NULL COMMENT 'Question name',
    FIRSTANSWER     VARCHAR(1000) NOT NULL COMMENT 'First answer',
    SECONDANSWER    VARCHAR(1000) NOT NULL COMMENT 'Second answer',
    THIRDANSWER     VARCHAR(1000) NOT NULL COMMENT 'Third answer',
    FOURTHANSWER    VARCHAR(1000) NOT NULL COMMENT 'Fourth answer',
    FIFTHANSWER     VARCHAR(1000) NOT NULL COMMENT 'Fifth answer',
    RIGHTANSWER     CHAR(1) NOT NULL COMMENT 'Right answer',
    ACTIVEFLAG      CHAR(1) NOT NULL COMMENT 'Active flag',

    PRIMARY KEY(QUESTIONID),
    INDEX QUESTIONNAME_INDEX (QUESTIONNAME ASC),
    INDEX FIRSTANSWER_INDEX (FIRSTANSWER ASC),
    INDEX SECONDANSWER_INDEX (SECONDANSWER ASC),
    INDEX THIRDANSWER_INDEX (THIRDANSWER ASC),
    INDEX FOURTHANSWER_INDEX (FOURTHANSWER ASC),
    INDEX FIFTHANSWER_INDEX (FIFTHANSWER ASC)
)
    ENGINE = InnoDB
    COMMENT = 'This table stores and describes questions';

-- Create table AISTUDENTTESTER.SUBJECT
CREATE TABLE IF NOT EXISTS AISTUDENTTESTER.SUBJECT (
    SUBJECTID      INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Subject id, PK',
    SUBJECTNAME    VARCHAR(200) NOT NULL COMMENT 'Subject name',
    ACTIVEFLAG     CHAR(1) NOT NULL COMMENT 'Active flag',

    PRIMARY KEY(SUBJECTID),
    UNIQUE INDEX SUBJECTNAME_UNIQUE_INDEX (SUBJECTNAME ASC)
)
    ENGINE = InnoDB
    COMMENT = 'This table stores and describes subjects';

-- Create table AISTUDENTTESTER.TOPIC
CREATE TABLE IF NOT EXISTS AISTUDENTTESTER.TOPIC (
    TOPICID         INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Topic id, PK',
    SUBJECTID       INT UNSIGNED NOT NULL COMMENT 'Subject id, FK',
    TOPICNAME       VARCHAR(200) NOT NULL COMMENT 'Topic name',
    ACTIVEFLAG      CHAR(1) NOT NULL COMMENT 'Active flag',

    PRIMARY KEY(TOPICID),
    INDEX SUBJECTID_INDEX (SUBJECTID ASC),
    UNIQUE INDEX TOPICNAME_UNIQUE_INDEX (TOPICNAME ASC),

    CONSTRAINT SUBJECTID
    FOREIGN KEY (SUBJECTID)
    REFERENCES AISTUDENTTESTER.SUBJECT (SUBJECTID)
)
    ENGINE = InnoDB
    COMMENT = 'This table stores and describes topics';

-- Create table AISTUDENTTESTER.QUESTIONMAP
CREATE TABLE IF NOT EXISTS AISTUDENTTESTER.QUESTIONMAP (
    QUESTIONMAPID   INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Question map id, PK',
    QUESTIONID      INT UNSIGNED NOT NULL COMMENT 'Question id, FK',
    TOPICID         INT UNSIGNED NOT NULL COMMENT 'Topic id, FK',
    ACTIVEFLAG      CHAR(1) NOT NULL COMMENT 'Active flag',

    PRIMARY KEY(QUESTIONMAPID),
    INDEX QUESTIONID_INDEX (QUESTIONID ASC),
    INDEX TOPICID_INDEX (TOPICID ASC),

    CONSTRAINT QUESTIONID
    FOREIGN KEY (QUESTIONID)
    REFERENCES AISTUDENTTESTER.QUESTION (QUESTIONID),

    CONSTRAINT TOPICID
    FOREIGN KEY (TOPICID)
    REFERENCES AISTUDENTTESTER.TOPIC (TOPICID)
)
    ENGINE = InnoDB
    COMMENT = 'This table mapping each question to there topic';

-- Create table AISTUDENTTESTER.ROLE
CREATE TABLE IF NOT EXISTS AISTUDENTTESTER.ROLE (
    ROLEID          INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Role id, PK',
    ROLENAME        VARCHAR(200) NOT NULL COMMENT 'Role name',
    ACTIVEFLAG      CHAR(1) NOT NULL COMMENT 'Active flag',

    PRIMARY KEY(ROLEID),
    UNIQUE INDEX ROLENAME_UNIQUE_INDEX (ROLENAME ASC)
)
    ENGINE = InnoDB
    COMMENT = 'This table stores and describes role of user in application';

-- Create table AISTUDENTTESTER.APPLICATIONUSER
CREATE TABLE IF NOT EXISTS AISTUDENTTESTER.APPLICATIONUSER (
    APPLICATIONUSERID      INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Application user id, PK',
    USERNAME               VARCHAR(200) NOT NULL COMMENT 'Username',
    PASSWORD               VARCHAR(200) NOT NULL COMMENT 'Password',
    ACTIVEFLAG             CHAR(1) NOT NULL COMMENT 'Active flag',

    PRIMARY KEY(APPLICATIONUSERID),
    UNIQUE INDEX USERNAME_UNIQUE_INDEX (USERNAME ASC)
)
    ENGINE = InnoDB
    COMMENT = 'This table stores and describes user in application';

-- Create table AISTUDENTTESTER.ROLEMAP
CREATE TABLE IF NOT EXISTS AISTUDENTTESTER.ROLEMAP (
    ROLEMAPID              INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Role map id, PK',
    ROLEID                 INT UNSIGNED NOT NULL COMMENT 'Role id, FK',
    APPLICATIONUSERID      INT UNSIGNED NOT NULL COMMENT 'Application user id, FK',
    ACTIVEFLAG             CHAR(1) NOT NULL COMMENT 'Active flag',

    PRIMARY KEY(ROLEMAPID),
    INDEX ROLEID_INDEX (ROLEID ASC),
    INDEX APPLICATIONUSERID_INDEX (APPLICATIONUSERID ASC),

    CONSTRAINT ROLEID
    FOREIGN KEY (ROLEID)
    REFERENCES AISTUDENTTESTER.ROLE (ROLEID),

    CONSTRAINT APPLICATIONUSERID
    FOREIGN KEY (APPLICATIONUSERID)
    REFERENCES AISTUDENTTESTER.APPLICATIONUSER (APPLICATIONUSERID)
)
    ENGINE = InnoDB
    COMMENT = 'This table mapping each user to there role';

-- Create table AISTUDENTTESTER.STUDENTGROUP
CREATE TABLE IF NOT EXISTS AISTUDENTTESTER.STUDENTGROUP (
    STUDENTGROUPID        INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Student group id, PK',
    STUDENTGROUPNUMBER    VARCHAR(200) NOT NULL COMMENT 'Student group number',
    STUDENTGROUPYEAR      VARCHAR(200) NOT NULL COMMENT 'Student group year',
    ACTIVEFLAG            CHAR(1) NOT NULL COMMENT 'Active flag',

    PRIMARY KEY(STUDENTGROUPID)
)
    ENGINE = InnoDB
    COMMENT = 'This table stores and describes student groups';

-- Create table AISTUDENTTESTER.STUDENT
CREATE TABLE IF NOT EXISTS AISTUDENTTESTER.STUDENT (
    STUDENTID             INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Student id, PK',
    STUDENTGROUPID        INT UNSIGNED NOT NULL COMMENT 'Student group id, FK',
    STUDENTTICKET         VARCHAR(200) NOT NULL COMMENT 'Student ticket',
    FIRSTNAME             VARCHAR(200) NOT NULL COMMENT 'Firstname',
    LASTNAME              VARCHAR(200) NOT NULL COMMENT 'Lastname',
    MIDDLENAME            VARCHAR(200) COMMENT 'Middlename',
    ACTIVEFLAG            CHAR(1) NOT NULL COMMENT 'Active flag',

    PRIMARY KEY(STUDENTID),
    INDEX STUDENTGROUPID_INDEX (STUDENTGROUPID ASC),
    UNIQUE INDEX STUDENTTICKET_UNIQUE_INDEX (STUDENTTICKET ASC),
    INDEX FIRSTNAME_INDEX (FIRSTNAME ASC),
    INDEX LASTNAME_INDEX (LASTNAME ASC),
    INDEX MIDDLENAME_INDEX (MIDDLENAME ASC),

    CONSTRAINT STUDENTGROUPID
    FOREIGN KEY (STUDENTGROUPID)
    REFERENCES AISTUDENTTESTER.STUDENTGROUP (STUDENTGROUPID)
)
    ENGINE = InnoDB
    COMMENT = 'This table stores and describes students';

-- Create table AISTUDENTTESTER.STRATEGY
CREATE TABLE IF NOT EXISTS AISTUDENTTESTER.STRATEGY (
    STRATEGYID            INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Strategy id, PK',
    STRATEGYNAME          VARCHAR(200) NOT NULL COMMENT 'Strategy name',
    ACTIVEFLAG            CHAR(1) NOT NULL COMMENT 'Active flag',

    PRIMARY KEY(STRATEGYID)
)
    ENGINE = InnoDB
    COMMENT = 'This table stores and describes strategy of marking';

-- Create table AISTUDENTTESTER.MARK
CREATE TABLE IF NOT EXISTS AISTUDENTTESTER.MARK (
    MARKID                      INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Mark id, PK',
    STRATEGYID                  INT UNSIGNED NOT NULL COMMENT 'Strategy id, FK',
    NUMBEROFRIGHTQUESTIONS      INT UNSIGNED NOT NULL COMMENT 'Number of right questions',
    MARK                        INT UNSIGNED NOT NULL COMMENT 'Mark',
    ACTIVEFLAG                  CHAR(1) NOT NULL COMMENT 'Active flag',

    PRIMARY KEY(MARKID),
    INDEX STRATEGYID_INDEX (STRATEGYID ASC),

    CONSTRAINT STRATEGYID
    FOREIGN KEY (STRATEGYID)
    REFERENCES AISTUDENTTESTER.STRATEGY (STRATEGYID)
)
    ENGINE = InnoDB
    COMMENT = 'This table stores and describes marks which depends from strategy';

-- Create table AISTUDENTTESTER.TESTSESSION
CREATE TABLE IF NOT EXISTS AISTUDENTTESTER.TESTSESSION (
    TESTSESSIONID                   INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Test session id, PK',
    STUDENTID                       INT UNSIGNED NOT NULL COMMENT 'Student id, FK',
    CREATEDDATE                     DATE NOT NULL COMMENT 'Created date',
    MARK                            INT UNSIGNED COMMENT 'Mark',
    Q1                              INT UNSIGNED NOT NULL COMMENT 'Question 1 id, FK',
    A1                              CHAR(1) NOT NULL COMMENT 'Answer 1',
    Q2                              INT UNSIGNED NOT NULL COMMENT 'Question 2 id, FK',
    A2                              CHAR(1) NOT NULL COMMENT 'Answer 2',
    Q3                              INT UNSIGNED NOT NULL COMMENT 'Question 3 id, FK',
    A3                              CHAR(1) NOT NULL COMMENT 'Answer 3',
    Q4                              INT UNSIGNED NOT NULL COMMENT 'Question 4 id, FK',
    A4                              CHAR(1) NOT NULL COMMENT 'Answer 4',
    Q5                              INT UNSIGNED NOT NULL COMMENT 'Question 5 id, FK',
    A5                              CHAR(1) NOT NULL COMMENT 'Answer 5',
    Q6                              INT UNSIGNED NOT NULL COMMENT 'Question 6 id, FK',
    A6                              CHAR(1) NOT NULL COMMENT 'Answer 6',
    Q7                              INT UNSIGNED NOT NULL COMMENT 'Question 7 id, FK',
    A7                              CHAR(1) NOT NULL COMMENT 'Answer 7',
    Q8                              INT UNSIGNED NOT NULL COMMENT 'Question 8 id, FK',
    A8                              CHAR(1) NOT NULL COMMENT 'Answer 8',
    Q9                              INT UNSIGNED NOT NULL COMMENT 'Question 9 id, FK',
    A9                              CHAR(1) NOT NULL COMMENT 'Answer 9',
    Q10                             INT UNSIGNED NOT NULL COMMENT 'Question 10 id, FK',
    A10                             CHAR(1) NOT NULL COMMENT 'Answer 10',
    Q11                             INT UNSIGNED NOT NULL COMMENT 'Question 11 id, FK',
    A11                             CHAR(1) NOT NULL COMMENT 'Answer 11',
    Q12                             INT UNSIGNED NOT NULL COMMENT 'Question 12 id, FK',
    A12                             CHAR(1) NOT NULL COMMENT 'Answer 12',
    Q13                             INT UNSIGNED NOT NULL COMMENT 'Question 13 id, FK',
    A13                             CHAR(1) NOT NULL COMMENT 'Answer 13',
    Q14                             INT UNSIGNED NOT NULL COMMENT 'Question 14 id, FK',
    A14                             CHAR(1) NOT NULL COMMENT 'Answer 14',
    Q15                             INT UNSIGNED NOT NULL COMMENT 'Question 15 id, FK',
    A15                             CHAR(1) NOT NULL COMMENT 'Answer 15',
    Q16                             INT UNSIGNED NOT NULL COMMENT 'Question 16 id, FK',
    A16                             CHAR(1) NOT NULL COMMENT 'Answer 16',
    Q17                             INT UNSIGNED NOT NULL COMMENT 'Question 17 id, FK',
    A17                             CHAR(1) NOT NULL COMMENT 'Answer 17',
    Q18                             INT UNSIGNED NOT NULL COMMENT 'Question 18 id, FK',
    A18                             CHAR(1) NOT NULL COMMENT 'Answer 18',
    Q19                             INT UNSIGNED NOT NULL COMMENT 'Question 19 id, FK',
    A19                             CHAR(1) NOT NULL COMMENT 'Answer 19',
    Q20                             INT UNSIGNED NOT NULL COMMENT 'Question 20 id, FK',
    A20                             CHAR(1) NOT NULL COMMENT 'Answer 20',
    ACTIVEFLAG                      CHAR(1) NOT NULL COMMENT 'Active flag',

    PRIMARY KEY(TESTSESSIONID),
    INDEX STUDENTID_INDEX (STUDENTID ASC),
    INDEX Q1_INDEX (Q1 ASC),
    INDEX Q2_INDEX (Q2 ASC),
    INDEX Q3_INDEX (Q3 ASC),
    INDEX Q4_INDEX (Q4 ASC),
    INDEX Q5_INDEX (Q5 ASC),
    INDEX Q6_INDEX (Q6 ASC),
    INDEX Q7_INDEX (Q7 ASC),
    INDEX Q8_INDEX (Q8 ASC),
    INDEX Q9_INDEX (Q9 ASC),
    INDEX Q10_INDEX (Q10 ASC),
    INDEX Q11_INDEX (Q11 ASC),
    INDEX Q12_INDEX (Q12 ASC),
    INDEX Q13_INDEX (Q13 ASC),
    INDEX Q14_INDEX (Q14 ASC),
    INDEX Q15_INDEX (Q15 ASC),
    INDEX Q16_INDEX (Q16 ASC),
    INDEX Q17_INDEX (Q17 ASC),
    INDEX Q18_INDEX (Q18 ASC),
    INDEX Q19_INDEX (Q19 ASC),
    INDEX Q20_INDEX (Q20 ASC),

    CONSTRAINT STUDENTID
    FOREIGN KEY (STUDENTID)
    REFERENCES AISTUDENTTESTER.STUDENT (STUDENTID),

    CONSTRAINT Q1
    FOREIGN KEY (Q1)
    REFERENCES AISTUDENTTESTER.QUESTION (QUESTIONID),

    CONSTRAINT Q2
    FOREIGN KEY (Q2)
    REFERENCES AISTUDENTTESTER.QUESTION (QUESTIONID),

    CONSTRAINT Q3
    FOREIGN KEY (Q3)
    REFERENCES AISTUDENTTESTER.QUESTION (QUESTIONID),

    CONSTRAINT Q4
    FOREIGN KEY (Q4)
    REFERENCES AISTUDENTTESTER.QUESTION (QUESTIONID),

    CONSTRAINT Q5
    FOREIGN KEY (Q5)
    REFERENCES AISTUDENTTESTER.QUESTION (QUESTIONID),

    CONSTRAINT Q6
    FOREIGN KEY (Q6)
    REFERENCES AISTUDENTTESTER.QUESTION (QUESTIONID),

    CONSTRAINT Q7
    FOREIGN KEY (Q7)
    REFERENCES AISTUDENTTESTER.QUESTION (QUESTIONID),

    CONSTRAINT Q8
    FOREIGN KEY (Q8)
    REFERENCES AISTUDENTTESTER.QUESTION (QUESTIONID),

    CONSTRAINT Q9
    FOREIGN KEY (Q9)
    REFERENCES AISTUDENTTESTER.QUESTION (QUESTIONID),

    CONSTRAINT Q10
    FOREIGN KEY (Q10)
    REFERENCES AISTUDENTTESTER.QUESTION (QUESTIONID),

    CONSTRAINT Q11
    FOREIGN KEY (Q11)
    REFERENCES AISTUDENTTESTER.QUESTION (QUESTIONID),

    CONSTRAINT Q12
    FOREIGN KEY (Q12)
    REFERENCES AISTUDENTTESTER.QUESTION (QUESTIONID),

    CONSTRAINT Q13
    FOREIGN KEY (Q13)
    REFERENCES AISTUDENTTESTER.QUESTION (QUESTIONID),

    CONSTRAINT Q14
    FOREIGN KEY (Q14)
    REFERENCES AISTUDENTTESTER.QUESTION (QUESTIONID),

    CONSTRAINT Q15
    FOREIGN KEY (Q15)
    REFERENCES AISTUDENTTESTER.QUESTION (QUESTIONID),

    CONSTRAINT Q16
    FOREIGN KEY (Q16)
    REFERENCES AISTUDENTTESTER.QUESTION (QUESTIONID),

    CONSTRAINT Q17
    FOREIGN KEY (Q17)
    REFERENCES AISTUDENTTESTER.QUESTION (QUESTIONID),

    CONSTRAINT Q18
    FOREIGN KEY (Q18)
    REFERENCES AISTUDENTTESTER.QUESTION (QUESTIONID),

    CONSTRAINT Q19
    FOREIGN KEY (Q19)
    REFERENCES AISTUDENTTESTER.QUESTION (QUESTIONID),

    CONSTRAINT Q20
    FOREIGN KEY (Q20)
    REFERENCES AISTUDENTTESTER.QUESTION (QUESTIONID)
)
    ENGINE = InnoDB
    COMMENT = 'This table stores and describes tests session';